/*	File:		Unicode.h	Contains:	Public header for Unicode.	Written by:	Newton Research Group.*/#if !defined(__UNICODE_H)#define __UNICODE_H 1#if !defined(__NEWTON_H)#include "Newton.h"#endif#if defined(__cplusplus)extern "C" {#endif// ---------------------------------------------------------------------------// constantstypedef enum{	kUnsupportedEncoding = -1,	kUnicode = 0,				// not implemented	kMacRomanEncoding,		// Macintosh Roman	kASCIIEncoding,			// 7-bit ASCII	kPCRomanEncoding,			// not implemented	kWizardEncoding,			// for English Wizards	kShiftJISEncoding,		// for Japanese PV-F1, PI-3000, etc.	kMacKanjiEncoding			// ShiftJIS for Macintosh KanjiTalk 7	// 114... 115...} CharEncoding;#if defined(JapaneseVersion)#define	kNumOfEncodings		7#else#define	kNumOfEncodings		5#endif#define	kNoTranslationChar	0x1A#define	kEndOfString			0#define	kSystemEncoding		kUnicode// kDefaultEncoding represents the character set of the current desktop platform#ifdef usePCRomanEncoding#define	kDefaultEncoding		kPCRomanEncoding#elif defined(JapaneseVersion)#define	kDefaultEncoding		kShiftJISEncoding#else#define	kDefaultEncoding		kMacRomanEncoding#endif// ---------------------------------------------------------------------------// conversion calls#if defined(__cplusplus)void	ConvertFromUnicode(const UniChar * source, void * dest,				ArrayIndex length = 0x7FFFFFFF, CharEncoding destEncoding = kDefaultEncoding);void	ConvertToUnicode(const void * source, UniChar * dest,				ArrayIndex length = 0x7FFFFFFF, CharEncoding destEncoding = kDefaultEncoding);#elsevoid	ConvertFromUnicode(const UniChar * source, void * dest, ArrayIndex length, CharEncoding destEncoding);void	ConvertToUnicode(const void * source, UniChar * dest, ArrayIndex length, CharEncoding srcEncoding);#endifchar		A_CONST_CHAR(UniChar c);UniChar	U_CONST_CHAR(char c);// ---------------------------------------------------------------------------// comparison callstypedef int (*CompareProcPtr)(ArrayIndex, ArrayIndex, void *);#if defined(__cplusplus)class CSortingTable;int  CompareUnicodeText(const UniChar * s1, ArrayIndex len1, const UniChar * s2, ArrayIndex len2,								const CSortingTable * sorting = (const CSortingTable *)1, bool doDiacritical = NO, CompareProcPtr compareProc = NULL, void * refCon = NULL);#elseint  CompareUnicodeText(const UniChar * s1, ArrayIndex len1, const UniChar * s2, ArrayIndex len2,								const void *, bool, CompareProcPtr, void *);#endifint  CompareStringNoCase(const UniChar * s1, const UniChar * s2);#if defined(__cplusplus)}#endif#endif	/* __UNICODE_H */