/*	File:		UStringUtils.h	Contains:	Unicode-friendly version of some common string					utility functions.	Written by:	Newton Research Group.*/#if !defined(__USTRINGUTILS_H)#define __USTRINGUTILS_H 1#if !defined(__NEWTON_H)#include "Newton.h"#endif#if !defined(__UNICODE_H)#include "Unicode.h"#endif#if defined(__cplusplus)extern "C" {#endif//------------------------------------------------------------------------//	standard string utilitiesUniChar * 	Ustrcpy(UniChar * destStr, const UniChar * sourceStr);UniChar *	Ustrncpy(UniChar * destStr, const UniChar * sourceStr, size_t n);UniChar *	Ustrcat(UniChar * destStr, const UniChar * sourceStr);UniChar *	Ustrncat(UniChar * destStr, const UniChar * sourceStr, size_t n);size_t		Ustrlen(const UniChar * str);UniChar *	Ustrchr(const UniChar *str, UniChar ch);int			Ustrcmp(const UniChar * str1, const UniChar * str2);void *		Umemset(void* str, UniChar ch, size_t numChars);size_t		Umbstrlen(const UniChar * str, int destEncoding);size_t		Umbstrnlen(const UniChar * str, int destEncoding, size_t n);BOOL		HasChars(UniChar * c);BOOL		HasDigits(UniChar * c);BOOL		HasSpaces(UniChar * c);BOOL		IsPunctSymbol(UniChar * inStr, int inOffset);void		StripPunctSymbols(UniChar * inStr);BOOL		IsWhiteSpace(UniChar c);BOOL		IsSpace(UniChar c);BOOL		IsTab(UniChar c);BOOL		IsReturn(UniChar c);BOOL		IsBreaker(UniChar c);BOOL		IsDelimiter(UniChar c);BOOL		IsAlphabet(UniChar c);BOOL		IsDigit(UniChar c);BOOL		IsHexDigit(UniChar c);BOOL		IsAlphaNumeric(UniChar c);BOOL		IsFirstByteOf2Byte(UChar c, CharEncoding encoding);// unicode wrappers for char-by-char conversionsvoid 	ConvertUnicodeCharacters(UniChar * array, Ptr buffer, int conversionType, ArrayIndex len);long 	ConvertUnicodeChar(UniChar * c, Ptr b, int conversionType);void	UpperCaseText(UniChar * str, ArrayIndex len);void	UpperCaseNoDiacriticsText(UniChar * str, ArrayIndex len);void	LowerCaseText(UniChar * str, ArrayIndex len);#if defined(__cplusplus)}#endif#endif	/* __USTRINGUTILS_H */