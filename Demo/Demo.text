// Text of project Demo.text written on 13 May 2015 16:32


// Beginning of text file SoupFun.newtonscript

/* -----------------------------------------------------------------------------
	1. Create a soup to hold colour information.
----------------------------------------------------------------------------- */
begin
Print(ParamStr("Building ^0", [kPackageName]));local stor := GetStores()[0];
local soup := stor:GetSoup("Colors");
if not soup then
	begin
	local indexes := [ { structure:'slot, path:'color, type:'string },
					  { structure:'slot, path:'label, type:'tags } ];
	soup := stor:CreateSoupXmit("Colors", indexes, nil);
	// add some sample entries
	soup:AddXmit({color:"Red", label:'primary}, nil);
	soup:AddXmit({color:"Green", label:'primary}, nil);
	soup:AddXmit({color:"Blue", label:'primary}, nil);
	soup:AddXmit({color:"Peach", label:'pastel}, nil);
	soup:AddXmit({color:"Mint", label:'pastel}, nil);
	soup:AddXmit({color:"Light Red", label:'pastel}, nil);
	soup:AddXmit({color:"Lavender", label:'pastel}, nil);
	soup:AddXmit({color:"Dark Red", label:'other}, nil);
	soup:AddXmit({color:"Indigo", label:'other}, nil);
	soup:AddXmit({color:"Really Light Pale Red", label:'pastel}, nil);
	end;

/* -----------------------------------------------------------------------------
	2. Compile a query function.
----------------------------------------------------------------------------- */
local PrintEntries := func(curs)
	begin
	local e := curs:Entry();
	while e <> nil do
		begin
		Print(e);
		e := curs:Next()
		end
	end;

/* -----------------------------------------------------------------------------
	3. Try some soup queries.
----------------------------------------------------------------------------- */
Write("Red colors:\n");
call PrintEntries with (soup:Query({text:"Red"}));
Write("\nLight red colors:\n");
call PrintEntries with (soup:Query({words:["Light","Red"]}));
Write("\nPastel colors:\n");
call PrintEntries with (soup:Query({tagSpec:{equal:'pastel}}));
Write("\nNon-pastel colors:\n");
call PrintEntries with (soup:Query({tagSpec:{none:'[pastel]}}));
end;

// End of text file SoupFun.newtonscript

// Native code module SM.ntkc
DefConst('|SM|, 
{class: 'NativeModule, 
 name: 'SM, 
 version: 1, 
 CPUType: 'ARM610, 
 code: <code, length 23668>, 
 relocations: <relocs, length 92>, 
 debugfile: '|:Objects:SM.sym|, 
 entryPoints: [{#052165FD}, 
               {#05216689}, 
               {#05216715}, 
               {#052167A1}, 
               {#0521682D}, 
               {#052168B9}, 
               {#05216945}, 
               {#052169D1}, 
               {#05216A5D}, 
               {#05216AE9}, 
               {#05216B75}, 
               {#05216C01}, 
               {#05216C8D}, 
               {#05216D19}, 
               {#05216DA5}, 
               {#05216E31}, 
               ...]}

)

// Stream file ProjectRoot.stream
DefConst('|streamFile_ProjectRoot|, ReadStreamFile("ProjectRoot.stream");
|streamFile_ProjectRoot|:?Install();

