/*	File:		CommErrors.h	Contains:	Error codes for CCommTools	Copyright:	ï¿½ 1993-1995 by Apple Computer, Inc., all rights reserved.*/#if !defined(__COMMERRORS_H)#define __COMMERRORS_H 1#include "Newton/NewtonErrors.h"// ---------------  Comm script errors  ---------------#define kCommScriptNoActiveInputSpec			(ERRBASE_COMMSCRIPT)			// An active input spec is required #define kCommScriptBadForm							(ERRBASE_COMMSCRIPT - 1)	// Error in the form slot of an input spec #define kCommScriptZeroLengthData				(ERRBASE_COMMSCRIPT - 2)	// Trying to send zero-length data #define kCommScriptExpectedSpec					(ERRBASE_COMMSCRIPT - 3)	// An input spec is required #define kCommScriptInvalidOption					(ERRBASE_COMMSCRIPT - 4)	// The option you tried to set was missing #define kCommScriptInvalidEndSequence			(ERRBASE_COMMSCRIPT - 5)	// Error in the endSequence slot of an input spec #define kCommScriptInappropriatePartial		(ERRBASE_COMMSCRIPT - 6)	// Used the Partial method with a bad input spec, or unable to do a partial input #define kCommScriptInappropriateTermination	(ERRBASE_COMMSCRIPT - 7)	// Error in termination slot of input spec #define kCommScriptInappropriateTarget			(ERRBASE_COMMSCRIPT - 8)	// Error in target slot of input spec #define kCommScriptInappropriateFilter			(ERRBASE_COMMSCRIPT - 9)	// Error in filter slot of input spec #define kCommScriptExpectedTarget				(ERRBASE_COMMSCRIPT - 10)	// Attempted to receive binary data with no target object specified #define kCommScriptExpectedTemplate				(ERRBASE_COMMSCRIPT - 11)	// Attempted to send or receive template data without a template specified#define kCommScriptInputSpecAlreadyActive		(ERRBASE_COMMSCRIPT - 12)	// Tried to set an input spec when one was already active #define kCommScriptInvalidProxy					(ERRBASE_COMMSCRIPT - 13)	// Invalid value in filter proxy of input spec #define kCommScriptNoEndpointAvailable			(ERRBASE_COMMSCRIPT - 14)	// Endpoint object is missing #define kCommScriptInappropriateCall			(ERRBASE_COMMSCRIPT - 15)	// Method not supported, or called inappropriately #define kCommScriptCharNotSingleByte			(ERRBASE_COMMSCRIPT - 16)	// The character specified in the filter proxy of the input spec is more than a single byte #define kCommOptionFailure							(ERRBASE_COMMSCRIPT - 21)	// Option failed #define kCommOptionPartSuccess					(ERRBASE_COMMSCRIPT - 22)	// Option set, but set value is different from requested value #define kCommOptionReadOnly						(ERRBASE_COMMSCRIPT - 23)	// Set attempted on read-only option #define kCommOptionNotSupported					(ERRBASE_COMMSCRIPT - 24)	// Option not supported #define kCommOptionBadOpCode						(ERRBASE_COMMSCRIPT - 25)	// Invalid option opcode #define kCommOptionNotFound						(ERRBASE_COMMSCRIPT - 26)	// Option not found #define kCommOptionTruncated						(ERRBASE_COMMSCRIPT - 27)	// One or more requested options missing // ---------------  Comm tool errors  ---------------#define kCommErrIOBusy							(1)							// (when set) request is being processed and is not yet complete																						// currently used by OpenComplete#define kCommErrCommandInProgress			(ERRBASE_COMMTOOL - 1)#define kCommErrBadCommand						(ERRBASE_COMMTOOL - 2)#define kCommErrToolBusy						(ERRBASE_COMMTOOL - 3)	// tool already has pending all the requests it can handle																						// when returned from StartService indicates tool already running#define kCommErrBufferOverflow				(ERRBASE_COMMTOOL - 4)#define kCommErrRequestCanceled				(ERRBASE_COMMTOOL - 5)	// request canceled by kill request#define kCommErrBadParameter					(ERRBASE_COMMTOOL - 6)	// bad parameter in request#define kCommErrNoConnectionEnd				(ERRBASE_COMMTOOL - 7)	// connection end has not been created and must be created before request can be processed#define kCommErrAlreadyConnected				(ERRBASE_COMMTOOL - 8)	// invalid call when connected#define kCommErrNotConnected					(ERRBASE_COMMTOOL - 9)	// invalid call when not connected#define kCommErrIncompatibleRemote			(ERRBASE_COMMTOOL - 10)	// connection negotiation failed because remote end is incompatible with local connection end configuration#define kCommErrRetransLimitReached			(ERRBASE_COMMTOOL - 11)	// connection terminated/failed due to retransmission limit of data/connect packet reached#define kCommErrNoDataAvailable				(ERRBASE_COMMTOOL - 12)	// no data available for TCommToolGetRequest when fNonBlocking is TRUE#define kCommErrConnectionAborted			(ERRBASE_COMMTOOL - 13)	// connection aborted by disconnect#define kCommErrNotSupported					(ERRBASE_COMMTOOL - 14)	// call not supported#define kCommErrNoRequestPending				(ERRBASE_COMMTOOL - 15)	// request not pending#define kCommErrNoEventPending				(ERRBASE_COMMTOOL - 16)	// event not pending#define kCommErrListenerTimeOut				(ERRBASE_COMMTOOL - 17)	// time out waiting for connection#define kCommErrAlreadyBound					(ERRBASE_COMMTOOL - 18)	// connection end already bound#define kCommErrNotBound						(ERRBASE_COMMTOOL - 19)	// connection end needs to be bound before used#define kCommErrReleasingConnection			(ERRBASE_COMMTOOL - 20)	// connection end is being released#define kCommErrNoPhoneNumber					(ERRBASE_COMMTOOL - 21)	// Connect request is missing required phone number option#define kCommErrResourceNotAvailable		(ERRBASE_COMMTOOL - 22)	// operation failed because some resource was not available...#define kCommErrOptionNotSupported			(ERRBASE_COMMTOOL - 23)	// call failed because passed option is not supported#define kCommErrMethodNotImplemented		(ERRBASE_COMMTOOL - 24)	// this method is not implemented// ---------------  Serial errors  ---------------#define kSerResult_EOM							(1000)#define kSerResult_NoErr						(noErr)#define kSerErrChannelInUse					(ERRBASE_SERIAL)#define kSerErrMemoryError						(ERRBASE_SERIAL -  1)#define kSerErrNotCurrentOwner				(ERRBASE_SERIAL -  2)#define kSerErrAsyncError						(ERRBASE_SERIAL -  3)	// framing (parity) overrun#define kSerErrCRCError							(ERRBASE_SERIAL -  4)	// CRC error on input framing#define kSerErrInternalError					(ERRBASE_SERIAL -  5)	// internal error: e.g. illegal state in state machine.#define kSerErrPacketSizeError				(ERRBASE_SERIAL -  6)	// packet size too large or too small in output request#define kSerErrPacketLength					(ERRBASE_SERIAL -  7)	// packet unexpected length#define kSerErrPacketUnderRun					(ERRBASE_SERIAL -  8)	// eof not found...#define kSerErrPacketOverRun					(ERRBASE_SERIAL -  9)	// overrun bit set.#define kSerErrExcessCollisions				(ERRBASE_SERIAL - 10) 	// too many collisions when trying to send packet#define kSerErrExcessDeferrals				(ERRBASE_SERIAL - 11) 	// too many deferrals when trying to send packet#define kSerErrTimedOut							(ERRBASE_SERIAL - 12) 	// timed out waiting for some event...#define kSerErrToolNotReady					(ERRBASE_SERIAL - 13) 	// serial tool has not been turned on.// ---------------  MNP errors  ---------------#define kMNPErrNegotiationFailure			(ERRBASE_MNP -  1)		// connection parameter negotiation failure#define kMNPErrConnectTimeout					(ERRBASE_MNP -  2)		// connect request (acceptor mode) timed out#define kMNPErrNotConnected					(ERRBASE_MNP -  3)		// not connected#define kMNPErrAborted							(ERRBASE_MNP -  4)		// request aborted by disconnect request#define kMNPErrAttentionDisabled				(ERRBASE_MNP -  5)		// link attention service is not enabled#define kMNPErrConnectRetryLimit				(ERRBASE_MNP -  6)		// connect (initiator mode) request retry limit reached.#define kMNPErrCommandInProgress				(ERRBASE_MNP -  7)		// command already in progress.#define kMNPErrAlreadyConnected				(ERRBASE_MNP -  8)		// connection already established.#define kMNPErrIncompatibleProtLvl			(ERRBASE_MNP -  9)		// connection failed due to incompatible protocol levels#define kMNPErrHandshakeFailure				(ERRBASE_MNP - 10)		// connection handshake failed.#define kMNPErrNotAllocated					(ERRBASE_MNP - 11)		// memory for MNP not allocated (option was passed which indicated not to allocate mnp memory)#define kMNPErrEnd								kMNPErrNotAllocated		// must be last error!// ---------------  Fax errors  ---------------#define kFaxToolErrNoRemoteSignal			(ERRBASE_FAX - 1)#define kFaxToolErrIncompatibleRemoteUnit	(ERRBASE_FAX - 2)#define kFaxToolErrProtocolError				(ERRBASE_FAX - 3)#define kFaxToolErrCmdRetransLimit			(ERRBASE_FAX - 4)#define kFaxToolErrTransmissionFailed		(ERRBASE_FAX - 5)#define kFaxToolErrFailureToTrain			(ERRBASE_FAX - 6)#define kFaxToolErrNotSendingPage			(ERRBASE_FAX - 7)#define kFaxToolErrT4DecodeUnderflow		(ERRBASE_FAX - 8)// ---------------  Modem errors  ---------------#define kModemErrNoResponse					(ERRBASE_MODEM)			// modem not responding#define kModemErrNoDialTone					(ERRBASE_MODEM - 1)		// no dial tone#define kModemErrNoCarrier						(ERRBASE_MODEM - 2)		// no carrier#define kModemErrLineBusy						(ERRBASE_MODEM - 3)		// line busy#define kModemErrNoAnswer						(ERRBASE_MODEM - 4)		// no answer#define kModemErrCommandFailure				(ERRBASE_MODEM - 5)		// modem command failed (invalid modem command/bad CRC) or command too long#define kModemErrNoFaxCarrier					(ERRBASE_MODEM - 6)		// fax carrier error#define kModemErrNotSupported					(ERRBASE_MODEM - 7)		// modem connected to the serial port does not support requested service#define kModemErrCellularNotSupported		(ERRBASE_MODEM - 8)		// modem connected to the serial port does not support cellular connection#define kModemErrRcvPktFlagsTimeOut			(ERRBASE_MODEM - 9)		// AT+FRH command timed out receiving flags (as opposed to timing out waiting for flags)// ---------------  IR errors  ---------------#define kIRPending								(1)#define kIRErrTimeout							(ERRBASE_SHARPIR - 1)	// protocol time out#define kIRErrCancel								(ERRBASE_SHARPIR - 2)	// remote side cancelled operation#define kIRErrPacket								(ERRBASE_SHARPIR - 3)	// protocol error#define kIRErrCheckSum							(ERRBASE_SHARPIR - 4)	// data checksum failed#define kIRErrNAK									(ERRBASE_SHARPIR - 5)	// remote side receive failed#define kIRErrRetry								(ERRBASE_SHARPIR - 6)	// retries exceeded#define kIRErrSerial								(ERRBASE_SHARPIR - 7)	// SCC data errors on receive#define kIRErrGeneric							(ERRBASE_SHARPIR - 8)	// something else happened// ---------------  IrDA errors  ---------------// specific errors (many errors reported via codes above)#define kIrDAErrDiscoveryFailed				(ERRBASE_IRDA -  1)		// discovery failed#define kIrDAErrNoSuchClass					(ERRBASE_IRDA -  2)		// IAS lookup - class not found#define kIrDAErrNoSuchAttribute				(ERRBASE_IRDA -  3)		// IAS lookup - attribute not found#define kIrDAErrUserRequestedDisconnect	(ERRBASE_IRDA -  4)#define kIrDAErrLAPUnexpectedDisconnect	(ERRBASE_IRDA -  5)#define kIrDAErrLAPFailedConnection			(ERRBASE_IRDA -  6)#define kIrDAErrLAPReset						(ERRBASE_IRDA -  7)#define kIrDAErrLMMuxInitiatedDisconnect	(ERRBASE_IRDA -  8)#define kIrDAErrDataSentOnDiscLSAPConn		(ERRBASE_IRDA -  9)#define kIrDAErrNonResponsiveLMMuxClient	(ERRBASE_IRDA - 10)#define kIrDAErrNoAvailableLMMuxClient		(ERRBASE_IRDA - 11)#define kIrDAErrHalfOpen						(ERRBASE_IRDA - 12)#define kIrDAErrIllegalSourceAddress		(ERRBASE_IRDA - 13)#define kIrDAErrConnectionRace				(ERRBASE_IRDA - 14)#define kIrDAErrProtocolError					(ERRBASE_IRDA - 15)// ---------------  Blackbird errors  ---------------#define kBBvcInitErr								(ERRBASE_BLACKBIRD - 1)	// Blackbird initialization failed#define kBBTimerErr								(ERRBASE_BLACKBIRD - 2)	// some timer error occurred#define kBBConnectionDenied					(ERRBASE_BLACKBIRD - 3)	// a connection request was denied by the remote#define kBBNoFreeConnections					(ERRBASE_BLACKBIRD - 4)	// unable to connect because there are no free endpoints#define kBBNoServiceSpecified					(ERRBASE_BLACKBIRD - 5)	// a connect request was received but no service name was given// ---------------  Wizard errors  ---------------#define kWizErrGeneric							(ERRBASE_WIZARD - 1)		// usual serial error#define kWizErrBadApp							(ERRBASE_WIZARD - 2)		// unsupported application#define kWizErrTimeout							(ERRBASE_WIZARD - 3)		// time out#define kWizErrNoCard							(ERRBASE_WIZARD - 4)		// no card in Wizard#define kWizErrCancel							(ERRBASE_WIZARD - 5)		// import cancelled#define kWizErrNoTranslator					(ERRBASE_WIZARD - 6)		// no translator loaded// ---------------  TAPI errors  ---------------#define kTAPIErrGeneric							(ERRBASE_TAPI - 1)		// something bad happened#endif	/* __COMMERRORS_H */